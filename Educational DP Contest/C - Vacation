//package Atcoder.dpContest;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.StringTokenizer;

public class Main {

       static Scanner in=new Scanner();
    static PrintWriter out=new PrintWriter(System.out);
    
    static int n;
    
    static int a[][];
    
    public static void main(String[] amit) throws IOException {
        
        n=in.nextInt();
        
        a=new int[n][3];
        
        for(int i=0;i<n;i++){
            
            a[i][0]=in.nextInt();
            a[i][1]=in.nextInt();
            a[i][2]=in.nextInt();
            
        }
        
     int dp[][]=new int[n][3];
        
     dp[0][0]=a[0][0];
     dp[0][1]=a[0][1];
     dp[0][2]=a[0][2];
     
     for(int i=1;i<n;i++){
         
         for(int j=0;j<3;j++){
             
             if(j==0){
             
             dp[i][j]=a[i][j]+Math.max( dp[i-1][j+1],dp[i-1][j+2] );
             
             }
             
             if(j==1){
                 
                 dp[i][j]=a[i][j]+Math.max( dp[i-1][0],dp[i-1][2] );
                 
             }
             
             if(j==2){
                 
                 dp[i][j]=a[i][j]+Math.max(dp[i-1][0],dp[i-1][1]);
                 
             }
                 
         }
         
     }
     
     out.println(Math.max( dp[n-1][0],Math.max(dp[n-1][1],dp[n-1][2]) ));
     out.flush();
     
    }
    
      static class Scanner{
        
        BufferedReader in;
        StringTokenizer st;

        public Scanner() {
        
            in=new BufferedReader(new InputStreamReader(System.in));
            
        }
        
        String next() throws IOException{
            
            while(st==null || !st.hasMoreElements()){
                
                st=new StringTokenizer(in.readLine());
                
            }
            
            return st.nextToken();
            
        }
        
        int nextInt() throws IOException{
            
            return Integer.parseInt(next());
            
        }
        
        long nextLong() throws IOException{
            
            return Long.parseLong(next());
            
        }
        
        double nextDouble() throws IOException{
            
            return Double.parseDouble(next());
            
        }
        
        String nextLine() throws IOException{
            
            return in.readLine();
            
        }
    }    
    
}
/*

3
10 40 70
20 50 80
30 60 90


*/

/*1
100 10 1
*/

/*

7
6 7 8
8 8 3
2 5 2
7 8 6
4 6 8
2 3 4
7 5 1


*/

/*

3
6 9 3
4 2 11
6 9 16

*/

/*

4
11 16 12
19 13 26
31 37 30
1 100 2

*/
